---
title: "ModelosDePrediccion"
format: html
editor: visual
---

# Modelos de predicción: Concesión de medidas de seguridad

```{r librerias}
library(tidyverse)
library(ggcorrplot)
library(ggplot2)
library(caret)
library(naniar)
library(nnet)
library(RWeka)
```

TEXTO EXPLICATIVO

## Limpieza y obtención de datos

Utilizando el análisis explotariorio realizado, se determinó

```{r db}
db12_21 <- read.csv("Bases de Datos/Datos12_21.csv")

db12_21 <- db12_21 %>% mutate_at(c('MEDIDAS_SEGURIDAD', 'LEY_APLICABLE'), ~replace_na(., 10))

db12_21 <- db12_21 %>% mutate_at('AGR_OCUP', ~replace_na(., 9999))

db12_21 <- db12_21 %>% replace_with_na(replace = list('VIC_EDAD' = 99, 'HEC_MES' = 99, 'AGR_EDAD' = 99, 'HEC_DEPTOMCPIO' = 9999))

asignar.depto <- function(x) {
  d <- '0'
  
  if(is.na(x)) {
    return(NA)
  }
  
  if (x < 1000) {
    d <- substr(x, 1, 1)
  } else {
    d <- substr(x, 1, 2)
  }
  
  return(switch(d, '1' = 'Guatemala', '2' = 'El Progreso', '3' = 'Sacatepequez', '4' = 'Chimaltenango', '5' = 'Escuintla', '6' = 'Santa Rosa', '7' = 'Solola', '8' = 'Totonicapan', '9' = 'Quetzaltenango', '10' = 'Suchitepequz', '11' = 'Retalhuleu', '12' = 'San Marcos', '13' = 'Huehuetenango', '14' = 'Quiche', '15' = 'Baja Verapaz', '16' = 'Alta Verapaz', '17' = 'Peten', '18' = 'Izabal', '19' = 'Zacapa', '20' = 'Chiquimula', '21' = 'Jalapa', '22' = 'Jutiapa'))
}

asignar.ocup <- function(x) {
  if(is.na(x)) {
    return(NA)
  }
  
  if(x >= 9998) {
    return(x)
  }
  
  d <- substr(x, 1, 1)
  
  return(switch(d, '1' = d, '2' = d, '3' = d, '4' = d, '5' = d, '6' = d, '7' = d, '8' = d, '9' = d, '´' = '0'))
}

db12_21['DEPTO_DEN'] <- sapply(db12_21$DEPTO_MCPIO, FUN = asignar.depto)

db12_21['DEPTO_HEC'] <- sapply(db12_21$HEC_DEPTOMCPIO, FUN = asignar.depto)

db12_21$AGR_OCUP <- sapply(db12_21$AGR_OCUP, FUN = asignar.ocup)

db12_21 <- db12_21 %>% mutate_at(c('VIC_EDAD',  'HEC_MES', 'AGR_EDAD'), as.numeric)

db12_21 <- db12_21 %>% mutate_at(c('DEPTO_DEN','DEPTO_HEC', 'QUIEN_REPORTA', 'VIC_SEXO', 'VIC_ALFAB', 'VIC_ESCOLARIDAD', 'VIC_EST_CIV', 'VIC_GRUPET', 'VIC_NACIONAL', 'VIC_TRABAJA', 'VIC_OCUP', 'VIC_DISC', 'VIC_REL_AGR', 'HEC_AREA', 'HEC_TIPAGRE', 'HEC_RECUR_DENUN', 'AGR_SEXO', 'AGR_ALFAB', 'AGR_ESCOLARIDAD', 'AGR_EST_CIV', 'AGR_NACIONAL', 'AGR_TRABAJA', 'AGR_OCUP', 'INST_DENUN_HECHO', 'MEDIDAS_SEGURIDAD', 'LEY_APLICABLE', 'TOTAL_HIJOS', 'NUM_HIJ_HOM', 'NUM_HIJ_MUJ'), as.factor)

db12_21 <- db12_21[, -c(1, 2, 3, 4, 17, 18, 20, 22, 23, 24, 25, 26, 27, 29, 30, 34, 43)]

colSums(is.na(db12_21))

db12_21 <- db12_21[complete.cases(db12_21), ]
```

## Muestreo

```{r muestreo}
set.seed(645)

med1 = db12_21[db12_21$MEDIDAS_SEGURIDAD == 1,]
med2 = db12_21[db12_21$MEDIDAS_SEGURIDAD == 2,]
med9 = db12_21[db12_21$MEDIDAS_SEGURIDAD == 9,]
med10 = db12_21[db12_21$MEDIDAS_SEGURIDAD == 10,]

med1_s = sample(nrow(med1), nrow(med1) * 0.7)
med2_s = sample(nrow(med2), nrow(med2) * 0.7)
med9_s = sample(nrow(med9), nrow(med9) * 0.7)
med10_s = sample(nrow(med10), nrow(med10) * 0.7)

train <- rbind(med1[med1_s,], med2[med2_s,], med9[med9_s,], med10[med10_s,])
test <- rbind(med1[-med1_s,], med2[-med2_s,], med9[-med9_s,], med10[-med10_s,])
```

## Modelos

### Redes neuronales

#### Linear Output units

```{r rna_linear}
mod_sig_1 <- nnet(MEDIDAS_SEGURIDAD ~., data = train, size = 2, na.action = na.omit, rang = 0.1, decay = 5e-4, maxit = 200)

prediccion1 <- as.data.frame(predict(mod_sig_1, newdata = test[,-27]))
columnaMasAlta1 <- apply(prediccion1, 1, function(x) colnames(prediccion1)[which.max(x)])

cfm<-confusionMatrix(as.factor(columnaMasAlta1),test$MEDIDAS_SEGURIDAD)
cfm
```

#### Logistic output units

```{r rna_logistic}
mod_sig_2 <- nnet(MEDIDAS_SEGURIDAD ~., data = train, size = 2, na.action = na.omit, rang = 0.1, decay = 5e-4, maxit = 200, lineout = T)

prediccion2 <- as.data.frame(predict(mod_sig_2, newdata = test[,-c(27, 31)]))
columnaMasAlta2 <- apply(prediccion2, 1, function(x) colnames(prediccion2)[which.max(x)])

cfm<-confusionMatrix(as.factor(columnaMasAlta2),test$MEDIDAS_SEGURIDAD)
cfm
```
